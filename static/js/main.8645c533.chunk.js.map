{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/posts.ts","api/comments.ts","App.tsx","api/users.ts","index.tsx"],"names":["PostsList","posts","selectedPost","selectPost","className","map","post","userId","title","id","type","onClick","request","url","options","fetch","then","response","json","NewCommentForm","addComment","useState","body","setBody","email","setEmail","name","setName","onSubmit","event","preventDefault","Math","random","postId","createdAt","Date","placeholder","value","onChange","target","PostDetails","postDetails","setPostDetails","comments","setComments","showedComments","setShowedComments","useEffect","detailsFromSserver","commentsFromServer","deleteComment","commentId","filter","comment","method","removeComment","length","newComment","CurrentComment","JSON","stringify","App","setPosts","users","setUsers","selectedPostId","setSelectedPostId","loadPosts","getUserPosts","postsFromSserver","userssFromSserver","slice","Number","defaultValue","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8645c533.chunk.js","sourcesContent":["import React from 'react';\nimport { Post } from '../../types/posts';\nimport './PostsList.scss';\n\ninterface Props {\n  posts: Post[];\n  selectedPost: number,\n  selectPost: (postId: number) => void,\n}\n\nexport const PostsList: React.FC<Props> = ({\n  posts, selectedPost, selectPost,\n}) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map((post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                {`[User #${post.userId}] `}\n              </b>\n              {post.title}\n            </div>\n            {selectedPost !== post.id\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => selectPost(post.id)}\n                >\n                  Open\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => selectPost(0)}\n                >\n                  Close\n                </button>\n              )}\n          </li>\n        )))}\n      </ul>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport const request = (url: string, options?:RequestInit) => {\n  return fetch(`${BASE_URL}${url}`, options)\n    .then(response => response.json());\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { Comment } from '../../types/comment';\n\ninterface Props {\n  addComment: (newComment: Comment) => void;\n  selectedPost: number;\n}\n\nexport const NewCommentForm: React.FC<Props> = ({\n  addComment, selectedPost,\n}) => {\n  const [body, setBody] = useState('');\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n\n  const resetComment = () => {\n    setBody('');\n    setEmail('');\n    setName('');\n  };\n\n  const sumbitChange = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addComment({\n      id: Math.random(),\n      name,\n      email,\n      body,\n      postId: selectedPost,\n      createdAt: new Date(),\n    });\n    resetComment();\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={sumbitChange}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { addComment, getPostComments, removeComment } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\nimport { Post } from '../../types/posts';\nimport { Comment } from '../../types/comment';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ninterface Props {\n  selectedPost: number,\n}\n\nexport const PostDetails: React.FC<Props> = ({ selectedPost }) => {\n  const [postDetails, setPostDetails] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [showedComments, setShowedComments] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(selectedPost)\n      .then(detailsFromSserver => {\n        setPostDetails(detailsFromSserver);\n      });\n  }, []);\n\n  useEffect(() => {\n    getPostComments(selectedPost)\n      .then(commentsFromServer => setComments(commentsFromServer));\n  }, []);\n\n  const deleteComment = (commentId: number) => {\n    setComments(comments.filter(comment => comment.id !== commentId));\n    removeComment(commentId);\n  };\n\n  const addNewComment = (newComment: Comment) => {\n    setComments(CurrentComment => [...CurrentComment, newComment]);\n    addComment(newComment);\n  };\n\n  const hideCommment = () => {\n    setShowedComments(comment => {\n      if (comment) {\n        return false;\n      }\n\n      return true;\n    });\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <section className=\"PostDetails__post\">\n        <p>{postDetails?.body}</p>\n      </section>\n      {comments.length > 0 && (\n        <section className=\"PostDetails__comments\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={hideCommment}\n          >\n            {showedComments ? (\n              `Hide ${comments.length} comments`\n            ) : (\n              `Show ${comments.length} comments`\n            )}\n          </button>\n          { showedComments && (\n            <ul className=\"PostDetails__list\">\n              {comments.map(comment => (\n                <li key={comment.id} className=\"PostDetails__list-item\">\n                  <button\n                    type=\"button\"\n                    className=\"PostsList__button button\"\n                    onClick={() => deleteComment(comment.id)}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </section>\n      )}\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            addComment={addNewComment}\n            selectedPost={selectedPost}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { request } from './api';\nimport { Post } from '../types/posts';\n\nexport const getUserPosts = (userId?: number): Promise<Post[]> => {\n  if (userId) {\n    return request(`/posts?userId=${userId}`);\n  }\n\n  return request('/posts');\n};\n\nexport const getPostDetails = (postId: number): Promise<Post> => {\n  return request(`/posts/${postId}`);\n};\n","import { request } from './api';\nimport { Comment } from '../types/comment';\n\nexport const getPostComments = (postId?: number): Promise<Comment[]> => {\n  return request(`/comments?postId=${postId}`);\n};\n\nexport const addComment = (comment: Comment) => {\n  return request('/comments', {\n    method: 'POST',\n    body: JSON.stringify(comment),\n  });\n};\n\nexport const removeComment = (commentId: number) => {\n  return request(`/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\nimport { Post } from './types/posts';\nimport { User } from './types/user';\nimport { getUsers } from './api/users';\n\nexport const App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const loadPosts = (userId?: number) => {\n    getUserPosts(userId)\n      .then(postsFromSserver => {\n        setPosts(postsFromSserver);\n      });\n  };\n\n  useEffect(() => {\n    loadPosts();\n  }, []);\n\n  useEffect(() => {\n    getUsers()\n      .then(userssFromSserver => {\n        setUsers(userssFromSserver.slice(0, 10));\n      });\n  }, []);\n\n  const changeHendler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    loadPosts(Number(event.target.value));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select className=\"App__user-selector\" onChange={changeHendler}>\n            <option defaultValue=\"0\">All users</option>\n            {users.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPost={selectedPostId}\n            selectPost={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {!!selectedPostId\n          && <PostDetails selectedPost={selectedPostId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getUsers = () => {\n  return request('/users');\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}